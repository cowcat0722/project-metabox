{{> layout/header-admin}}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<style>
    #photoPreviewContainer {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: auto;
    }

    #photoPreviewContainer .photo-item {
        position: relative;
        margin-right: 10px;
        width: 150px;
        height: 150px;
        display: flex;
        justify-content: center;
        align-items: center;
        box-sizing: border-box;
    }

    #photoPreviewContainer img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    #photoPreviewContainer .remove-btn {
        position: absolute;
        top: 5px;
        right: 5px;
        background-color: red;
        color: white;
        border: none;
        border-radius: 50%;
        cursor: pointer;
    }

    .movie-poster {
        width: 100%;
        height: auto;
    }

    .badge {
        font-size: 1rem;
        border-radius: 0px;
        color: #1386a5;
        background-color: white;
        border: 2px solid #1386a5;
    }

    .rating {
        font-size: 1rem;
        font-weight: bold;
    }

    .section-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin-top: 20px;
    }

    .chart-container {
        margin-top: 20px;
    }

    .comment {
        display: flex;
        align-items: flex-start;
        padding: 10px;
        border-bottom: 1px solid #e9ecef;
    }

    .comment img {
        border-radius: 50%;
        margin-right: 10px;
    }

    .comment-body {
        flex: 1;
    }

    .comment-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 12px;
        color: #6c757d;
    }

    .nav-pagination-container {
        display: flex;
        justify-content: center;
        /* 네비게이션을 가운데 정렬 */
        flex-grow: 1;
        /* 네비게이션 영역이 유연하게 늘어나도록 설정 */
    }

    .page-item.active .page-link {
        color: red;
        text-decoration: underline;
    }

    .footer-text {
        font-size: 0.8rem;
    }

    .movie-detail {
        display: flex;
        align-items: flex-start;
        margin-top: 20px;
    }

    .movie-detail img {
        width: 200px;
        height: 300px;
        object-fit: cover;
    }

    .movie-info {
        margin-left: 20px;
        position: relative;
    }

    .movie-info h2 {
        font-size: 2rem;
        font-weight: bold;
    }

    .movie-info .sub-title {
        font-size: 1rem;
        color: gray;
    }

    .movie-info .rating {
        font-size: 1.2rem;
        margin-top: 10px;
    }

    .movie-info .rating .badge {
        margin-left: 10px;
    }

    .movie-info .details {
        margin-top: 10px;
        font-size: 0.9rem;
    }

    .movie-info .details p {
        display: flex;
        align-items: center;
        /* 세로 중앙 정렬 */
        margin-bottom: 10px;
        margin-left: 20px;
        /* 각 항목 사이의 간격 */
    }

    .movie-info .details p input {
        flex: 1;
        /* 입력 필드가 가능한 많은 공간을 차지하도록 함 */
        margin-left: 10px;
        /* 레이블과 입력 필드 사이의 간격 */
    }

    .movie-info .btn-group {
        position: absolute;
        top: 0;
        right: 0;
        display: flex;
        gap: 10px;
        /* 버튼 사이의 간격 */
    }

    .synopsis {
        margin-top: 20px;
        font-size: smaller;
        line-height: 1.5;
        font-weight: 600;
    }

    .chart-container {
        margin-top: 40px;
    }

    .chart-container canvas {
        width: 100% !important;
        height: 400px !important;
    }

    .table-container {
        margin-top: 40px;
    }

    .table-container table {
        width: 100%;
        border-collapse: collapse;
    }

    .table-container th,
    .table-container td {
        border: 1px solid #dee2e6;
        padding: 8px;
        text-align: center;
    }

    .stills-header,
    .trailer-header {
        display: flex;
        align-items: center;
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    .stills-header span,
    .trailer-header span {
        font-size: 16px;
        font-weight: bold;
        margin-right: 10px;
    }

    .stills-header button,
    .trailer-header button {
        font-size: 14px;
        padding: 2px 5px;
        background-color: #6c757d;
        color: white;
        border: none;
        border-radius: 3px;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: #000;
        border-radius: 50%;
    }

    .carousel-item img {
        max-width: 300px;
        max-height: 450px;
        margin: 0 auto;
    }

    .trailer-container {
        margin-top: 20px;
    }

    .trailer-item {
        position: relative;
        margin-bottom: 20px;
    }

    .trailer-item img {
        width: 100%;
        height: auto;
    }

    .play-button {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: rgba(255, 0, 0, 0.7);
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 20px;
    }

    .trailer-info {
        display: flex;
        align-items: center;
        margin-top: 5px;
    }

    .trailer-info span {
        font-size: 12px;
        color: #333;
        margin-right: 5px;
    }

    .trailer-info .badge {
        font-size: 10px;
        background-color: #007bff;
        color: white;
        margin-right: 5px;
    }

    .review-section {
        background-color: #f8f9fa;
        padding: 20px;
        margin: 20px;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .review-section p {
        margin: 0;
    }

    .highlight {
        color: red;
    }

    .btn-group {
        display: flex;
        gap: 10px;
    }

    .btn-custom {
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 10px;
    }

    .comment img.profile-img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        margin-right: 10px;
    }

    /* 스틸컷 이미지 고정 크기 설정 */
    .still-img-container {
        position: relative; /* 상대 위치 설정 */
        width: 100%; /* 부모 요소의 너비를 따름 */
        max-width: 300px; /* 최대 너비 설정 */
        height: 200px; /* 고정 높이 설정 */
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 15px; /* 이미지 사이의 간격 추가 */
    }

    .still-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .remove-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        cursor: pointer;
        font-size: 14px; /* 글자 크기 */
        border-radius: 5px; /* 둥근 사각형 모양 */
        padding: 5px 10px;
        background-color: #dc3545; /* 부트스트랩 btn-danger 색상 */
        color: white;
        border: none;
    }

    .stills-header {
        display: flex;
        align-items: center;
    }

    .file-input-wrapper {
        margin-left: 10px;
    }

    .file-input-wrapper input[type="file"] {
        width: auto;
    }
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container">
    <form action="/movie-edit" method="post" enctype="multipart/form-data">
        <hr>
        <div class="movie-detail">
            <input type="hidden" name="id" value="{{model.id}}">
            <div class="form-group mt-4">
                <div class="d-flex justify-content-center align-items-center"
                     style="width: 250px; height: 300px; border: 2px solid #E6E6E6; color: #E6E6E6;" id="profilePreview">
                    <img id="photoPreview" src="/image/movie/{{model.imgFilename}}" alt="Photo Preview"
                         style="width: 250px; height: 300px;">
                </div>
                <div class="file-input-container mt-4">
                    <input type="file" class="form-control-file" id="moviePhotos" name="imgFilename" accept="image/*"
                           onchange="previewImage();">
                </div>
            </div>
            <div class="movie-info">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-secondary" style="height: 40px;" onclick="location.href='/movie-list'">목록으로</button>
                    <button type="submit" class="btn btn-danger" style="height: 40px;">수정완료</button>
                </div>
                <h2>{{model.title}} <span class="badge badge-primary">{{model.releaseStatus}}</span></h2>
                <p class="sub-title">{{model.engTitle}}</p>
                <p class="rating">예매율: {{model.bookingRate}} %</p>
                <div class="details d-flex">
                    <div>
                        <p>감독: <input type="text" name="director" value="{{model.director}}" class="form-control"></p>
                        <p>배우: <input type="text" name="actor" value="{{model.actor}}"
                                      class="form-control"></p>
                        <p>장르: <input type="text" name="genre" value="{{model.genre}}" class="form-control"></p>
                    </div>
                    <div>
                        <p>기본 정보: <input type="text" name="info" value="{{model.info}}" class="form-control">
                        </p>
                        <p>상영 시작: <input type="date" name="startDate" value="{{model.startDate}}" class="form-control"></p>
                        <p>상영 종료: <input type="date" name="endDate" value="{{model.endDate}}" class="form-control"></p>
                    </div>
                </div>
            </div>
        </div>
        <div class="synopsis">
            <p>영화 설명</p>
            <textarea class="form-control" type="text" name="description" rows="25" cols="100">
                {{{model.description}}}
            </textarea>
        </div>
    </form>
        <div class="row chart-container">
            <div class="col-md-6">
                <h3 class="section-title">성별 예매 분포</h3>
                <canvas id="genderChart"></canvas>
            </div>
            <div class="col-md-6">
                <h3 class="section-title">연령별 예매 분포</h3>
                <canvas id="ageChart"></canvas>
            </div>
        </div>
        <div class="container trailer-container">
            <div class="trailer-header">
                <span>트레일러 3건</span>
                <button class="btn btn-secondary btn-sm" onclick="addTrailer()">+</button>
            </div>
            <div class="row">
                <div class="col-md-4 trailer-item">
                    <img src="https://via.placeholder.com/300x200" alt="Trailer 1">
                    <button class="play-button">&#9658;</button>
                    <div class="trailer-info">
                        <span class="badge">HD</span>
                        <span>메인 예고편</span>
                    </div>
                    <div class="trailer-info">
                        <span>2024.03.14</span>
                    </div>
                </div>
                <div class="col-md-4 trailer-item">
                    <img src="https://via.placeholder.com/300x200" alt="Trailer 2">
                    <button class="play-button">&#9658;</button>
                    <div class="trailer-info">
                        <span class="badge">HD</span>
                        <span>감정 컨트롤 본부 중계 영상</span>
                    </div>
                    <div class="trailer-info">
                        <span>2024.02.21</span>
                    </div>
                </div>
                <div class="col-md-4 trailer-item">
                    <img src="https://via.placeholder.com/300x200" alt="Trailer 3">
                    <button class="play-button">&#9658;</button>
                    <div class="trailer-info">
                        <span class="badge">HD</span>
                        <span>티저 예고편</span>
                    </div>
                    <div class="trailer-info">
                        <span>2024.02.20</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="carousel-container">
            <div class="container stills-container">
                <div class="stills-header">
                    <span>스틸컷 {{model.stillsCount}}건</span>
                    <button class="btn btn-secondary btn-sm" onclick="addStillImage({{model.id}})">+</button>
                    <div class="file-input-wrapper">
                        <input type="file" class="form-control-file" id="newStillInput" name="stills" accept="image/*" multiple>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4 d-flex justify-content-center">
                    <div class="still-img-container">
                        <img class="still-img" src="/image/movie/{{model.imgFilename}}" alt="poster" data-id="{{model.id}}">
                        <button class="remove-btn" onclick="confirmRemoveImage(this)">삭제</button>
                    </div>
                </div>
                {{#model.stills}}
                    <div class="col-md-4 d-flex justify-content-center">
                        <div class="still-img-container">
                            <img class="still-img" src="/image/movie_pic/{{fileName}}" alt="Trailer 1" data-still-id="{{id}}">
                            <button class="remove-btn" onclick="confirmRemoveImage({{id}})">삭제</button>
                        </div>
                    </div>
                {{/model.stills}}
            </div>
        </div>
        <div class="review-section">
            <div>
                <p>관람일 포함 7일 이내 관람평을 남기시면 <span class="highlight">20P</span>가 적립됩니다.</p>
                <p><strong>{{model.reviewCount}}</strong>명의 실관람객이 평가해주셨습니다.</p>
            </div>
            <div class="btn-group">
                <button class="btn btn-danger btn-custom">댓글 삭제</button>
            </div>
        </div>
        <div class="container comment-section">
            {{#model.reviews}}
            <div class="comment">
                <input type="checkbox" class="comment-checkbox">
                <img src="/image/user/{{userProfile}}" alt="User 1" class="profile-img">
                <div class="comment-body">
                    <p><strong>{{reviewer}}: </strong>{{comment}}</p>
                    <div class="comment-footer">
                        <span>2024.06.14</span>
                    </div>
                </div>
            </div>
            {{/model.reviews}}
            <div class="d-flex justify-content-between" style="margin-top: 10px;">
                <div class="nav-pagination-container">
                    <nav aria-label="Page navigation">
                        <ul class="pagination">
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item"><a class="page-link" href="#">4</a></li>
                            <li class="page-item"><a class="page-link" href="#">5</a></li>
                            <li class="page-item"><a class="page-link" href="#">6</a></li>
                            <li class="page-item"><a class="page-link" href="#">7</a></li>
                            <li class="page-item"><a class="page-link" href="#">8</a></li>
                            <li class="page-item"><a class="page-link" href="#">9</a></li>
                            <li class="page-item"><a class="page-link" href="#">10</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Next">
                                    다음 10개
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>

            </div>
        </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script>
    var ctxGender = document.getElementById('genderChart').getContext('2d');
    var genderChart = new Chart(ctxGender, {
        type: 'doughnut',
        data: {
            labels: ['남 33.8%', '여 66.2%'],
            datasets: [{
                data: [33.8, 66.2],
                backgroundColor: ['#4e73df', '#e74a3b'],
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                position: 'bottom',
            },
            title: {
                display: false,
            }
        }
    });

    var ctxAge = document.getElementById('ageChart').getContext('2d');
    var ageChart = new Chart(ctxAge, {
        type: 'bar',
        data: {
            labels: ['10대', '20대', '30대', '40대', '50대'],
            datasets: [{
                label: '연령별 예매 분포',
                data: [8.2, 29.5, 28.5, 24.7, 9.2],
                backgroundColor: ['#6c757d', '#a0522d', '#6c757d', '#6c757d', '#6c757d'],
                borderColor: ['#6c757d', '#a0522d', '#6c757d', '#6c757d', '#6c757d'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false,
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 10
                    }
                }
            }
        }
    });
</script>

<script>
    function addTrailer() {
        const container = document.querySelector('.row'); // 트레일러가 추가될 컨테이너 선택
        const newTrailer = document.createElement('div'); // 새 트레일러 아이템을 위한 div 생성
        newTrailer.className = 'col-md-4 trailer-item'; // 클래스 설정
        newTrailer.innerHTML = `
                <img src="https://via.placeholder.com/300x200" alt="New Trailer">
                <button class="play-button">&#9658;</button>
                <div class="trailer-info">
                    <span class="badge">HD</span>
                    <span>새 예고편</span>
                </div>
                <div class="trailer-info">
                    <span>날짜 미정</span>
                </div>
            `; // 새 트레일러 아이템의 내용
        container.appendChild(newTrailer); // 컨테이너에 새 트레일러 아이템 추가
    }
</script>

<script>
    function addCarouselImage() {
        const carouselInner = document.querySelector('#imageCarousel .carousel-inner'); // 캐러셀 내부 선택
        const newCarouselItem = document.createElement('div'); // 새 캐러셀 아이템을 위한 div 생성
        newCarouselItem.className = 'carousel-item'; // 클래스 설정

        // 새 이미지 요소 생성
        const newImage = document.createElement('img');
        newImage.src = "https://via.placeholder.com/600x900"; // 새 이미지 URL 설정
        newImage.className = "d-block w-100"; // 클래스 설정
        newImage.alt = "New Slide"; // 대체 텍스트 설정

        newCarouselItem.appendChild(newImage); // 새 캐러셀 아이템에 이미지 추가
        carouselInner.appendChild(newCarouselItem); // 캐러셀 내부에 새 아이템 추가
    }

    function previewImage() {
        var file = document.getElementById("moviePhotos").files[0]; // 파일 입력 요소에서 파일을 가져옴
        var reader = new FileReader(); // 파일 읽기 객체 생성

        reader.onload = function (e) {
            var imgElement = document.getElementById("photoPreview"); // 이미지 미리보기 요소 선택
            imgElement.src = e.target.result; // 이미지 미리보기 요소에 파일 데이터 설정
            imgElement.style.display = "block"; // 이미지 미리보기 요소를 표시
        };

        if (file) {
            reader.readAsDataURL(file); // 파일을 데이터 URL로 읽음
        }
    }

    function previewImages() {
        var files = document.getElementById("stills").files;
        var previewContainer = document.getElementById("photoPreviewContainer");
        previewContainer.innerHTML = "";

        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var reader = new FileReader();

            reader.onload = (function (file) {
                return function (e) {
                    var photoItem = document.createElement("div");
                    photoItem.classList.add("photo-item");

                    var imgElement = document.createElement("img");
                    imgElement.src = e.target.result;

                    var removeBtn = document.createElement("button");
                    removeBtn.classList.add("remove-btn");
                    removeBtn.innerText = "X";
                    removeBtn.onclick = function () {
                        previewContainer.removeChild(photoItem);
                    };

                    photoItem.appendChild(imgElement);
                    photoItem.appendChild(removeBtn);
                    previewContainer.appendChild(photoItem);
                };
            })(file);

            if (file) {
                reader.readAsDataURL(file);
            }
        }
    }
</script>

<script>
    // 스틸컷 삭제 요청을 서버로 보내는 함수
    function deleteStillById(stillId) {
        return fetch(`/stills-delete/${stillId}`, {
            method: 'POST', // HTTP 메서드로 POST 사용
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded', // 요청 헤더에 Content-Type 설정
            }
        }).then(response => response.text()); // 서버 응답을 텍스트로 변환하여 반환
    }

    // SweetAlert2를 사용하여 확인 및 삭제 기능을 수행하는 함수
    function confirmRemoveImage(stillId) {
        Swal.fire({
            title: "정말 삭제하시겠습니까?", // 경고창의 제목
            text: "삭제를 원하면 '삭제' 버튼을 눌러주세요.", // 경고창의 텍스트
            icon: "warning", // 경고 아이콘 사용
            showCancelButton: true, // 취소 버튼을 표시
            confirmButtonColor: '#d33', // 확인 버튼 색상
            cancelButtonColor: '#3085d6', // 취소 버튼 색상
            confirmButtonText: '삭제', // 확인 버튼 텍스트
            cancelButtonText: '취소', // 취소 버튼 텍스트
            reverseButtons: true, // 버튼 순서 반전
        }).then(result => {
            if (result.isConfirmed) {
                // 스틸컷 삭제 요청을 보냄
                deleteStillById(stillId).then(data => {
                    if (data === "success") {
                        // 삭제 성공 메시지를 표시하고 페이지를 새로고침
                        Swal.fire("삭제되었습니다!", "스틸컷이 성공적으로 삭제되었습니다.", "success").then(() => {
                            location.reload(); // 페이지를 새로고침하여 변경사항 반영
                        });
                    } else {
                        // 삭제 실패 메시지를 표시
                        Swal.fire("삭제 불가", "포스터는 삭제할 수 없습니다.", "error");
                    }
                }).catch(error => {
                    // 요청 실패 시 오류 메시지를 표시
                    Swal.fire("오류", "스틸컷 삭제에 실패하였습니다.", "error");
                });
            } else {
                // 삭제가 취소되었음을 알리는 메시지를 표시
                Swal.fire("취소되었습니다.", "삭제 요청이 취소되었습니다.", "info");
            }
        });
    }

    // 스틸컷 추가 기능
    function addStillImage(movieId) {
        const fileInput = document.getElementById('newStillInput');
        const files = fileInput.files;

        if (files.length === 0) {
            Swal.fire("오류", "이미지를 선택해 주세요.", "error");
            return;
        }

        const formData = new FormData();
        for (let i = 0; i < files.length; i++) {
            formData.append('stills', files[i]);
        }

        fetch(`/stills-add/${movieId}`, {
            method: 'POST',
            body: formData
        }).then(response => response.text()).then(data => {
            if (data === "success") {
                Swal.fire("추가되었습니다!", "스틸컷이 성공적으로 추가되었습니다.", "success").then(() => {
                    location.reload();
                });
            } else {
                Swal.fire("오류", "스틸컷 추가에 실패하였습니다.", "error");
            }
        }).catch(error => {
            Swal.fire("오류", "스틸컷 추가에 실패하였습니다.", "error");
        });
    }
</script>
{{> layout/footer}}