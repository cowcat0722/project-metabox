<div class="profile-card">
    <div class="header">
        <img src="{{model.userDTO.imgFilename}}">
        <div class="info">
            <h3>{{model.userDTO.name}}님</h3>
            <p><strong>{{model.userDTO.nickname}}</strong></p>
            <p>환영합니다! <span class="text-danger">최고의 영화</span> 와 함께 <span class="text-danger">특별한 시간</span>을 보내세요.</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 points">
            <h4>POINT <i class="fas fa-question-circle" data-toggle="tooltip"
                         title="1,000P 이상부터 10P 단위로 사용 가능합니다."></i></h4>
            <p>사용가능 포인트 <strong class="point-price">{{model.userDTO.point}} 점</strong></p>
        </div>
    </div>
    <div class="grid theater-select">
        {{#model.theaterScrapDTOS}}
            <div style="font-size: 15px" data-theater-name-id="{{theaterId}}" data-theater="{{name}}">{{name}}</div>
        {{/model.theaterScrapDTOS}}
        <div class="setting" style="text-align: center; font-weight: bold" onclick="openModal()">빠른 극장 선택</div>
    </div>
</div>
<!-- 모달창 html 디자인 -->
<div id="myModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <div class="tab">
            <div style="background-color: #4E0929; color: white">자주가는 META BOX</div>
        </div>
        <div class="tab-content active" id="tab1">
            <div class="theater-list theater-area-list">
                {{#model.theaterDTOS}}
                    <div class="tab-button" data-theater-id="{{id}}" data-area="{{areaName}}">{{areaName}}</div>
                {{/model.theaterDTOS}}
            </div>
        </div>
        {{#model.theaterDTOS}}
            <div class="tab-content area-name-list" id="area-name-list-{{id}}">
                {{#theaterNameDTOS}}
                    <div class="theater-list theater-list-name">
                        <div data-theater-name-id="{{theaterId}}" data-theater="{{theaterName}}">{{theaterName}}</div>
                    </div>
                {{/theaterNameDTOS}}
            </div>
        {{/model.theaterDTOS}}
        <div class="selected-theater">
            <!-- 선택한 극장이 여기 표시됩니다 -->
        </div>
        <div class="button-container">
            <button id="checkListButton" type="button" onclick="checkList()">확인</button>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<script>
    // 항상 div 5개 유지하게
    const maxSlots = 5;
    const $grid = $('.grid');
    const currentSlots = $grid.children().length - 1; // 설정 버튼 제외
    const emptySlots = maxSlots - currentSlots;
    for (let i = 0; i < emptySlots; i++) {
        $('<div></div>').insertBefore('.setting');
    }
    // 스크랩 납치
    let myTheaterScrap = [];
    function checkList() {
        let userId = {{model.userDTO.id}};
        console.log("userId " + userId);
        $('.selected-theater div').each(function () {
            let theaterNameId = $(this).data("theater-name-id");
            console.log("극장pk " + theaterNameId);
            if (!myTheaterScrap.some(item => item.theaterNameId === theaterNameId)) {
                let selectList = {
                    theaterNameId: theaterNameId,
                    userId: userId
                };
                myTheaterScrap.push(selectList);
            }
        });
        $.ajax({
            url: '/mypage/home/scrap',
            data: JSON.stringify(myTheaterScrap),
            contentType: 'application/json; charset=utf-8',
            type: 'POST'
        }).done((res) => {
            alert("자주가는 META BOX 설정이 완료되었습니다.");
            closeModal();
            location.reload();
        }).fail((res) => {
            alert("error!");
        });
    }
    // 툴팁
    $('[data-toggle="tooltip"]').tooltip();
    // 모달창 열기
    function openModal() {
        $("#myModal").css("display", "block");
        // 이미 선택된 극장을 모달의 selected-theater에 추가
        $(".theater-select div[data-theater-name-id]").each(function () {
            const theaterName = $(this).data("theater");
            const theaterNameId = $(this).data("theater-name-id");
            const selectedTheater = $(`
                <div data-theater="${theaterName}" data-theater-name-id="${theaterNameId}">
                    ${theaterName}
                    <button class="delete-button">&times;</button>
                </div>
            `);
            selectedTheater.find('.delete-button').on('click', function () {
                const parentDiv = $(this).parent();
                const theaterName = parentDiv.data('theater');
                $(`.theater-list-name div[data-theater="${theaterName}"]`).css('background-color', '');
                myTheaterScrap = myTheaterScrap.filter(item => item.theaterNameId !== parentDiv.data('theater-name-id'));
                parentDiv.remove();
            });
            $('.selected-theater').append(selectedTheater);
        });
    }
    // 모달창 닫기
    function closeModal() {
        $("#myModal").css("display", "none");
        $('.selected-theater').empty(); // 모달 닫을 때 선택된 극장 목록 초기화
    }
    // area 선택 시 극장 목록 표시
    $('.theater-area-list').on('click', '.tab-button', function () {
        let id = $(this).data('theater-id');
        $('.area-name-list').removeClass('active');
        $('#area-name-list-' + id).addClass('active');
    });
    // 최대 5개의 극장 선택 제한
    const maxSelectedTheaters = 5;
    // 극장 선택
    $('.theater-list-name').on('click', 'div', function () {
        $(this).css('background-color', '#C6C6C6');
        const theaterName = $(this).data('theater');
        const theaterNameId = $(this).data('theater-name-id');
        let isSelected = false;
        $('.selected-theater div').each(function () {
            const textNode = $(this).contents().filter(function () {
                return this.nodeType === 3;
            }).text().trim();
            if (textNode === theaterName) {
                isSelected = true;
                return false;
            }
        });
        if (isSelected) {
            return;
        }
        if ($('.selected-theater div').length >= maxSelectedTheaters) {
            alert('최대 5개의 극장만 선택할 수 있습니다.');
            return;
        }
        const selectedTheater = $(`
            <div data-theater="${theaterName}" data-theater-name-id="${theaterNameId}">
                ${theaterName}
                <button class="delete-button">&times;</button>
            </div>
        `);
        selectedTheater.find('.delete-button').on('click', function () {
            const parentDiv = $(this).parent();
            const theaterName = parentDiv.data('theater');
            $(`.theater-list-name div[data-theater="${theaterName}"]`).css('background-color', '');
            myTheaterScrap = myTheaterScrap.filter(item => item.theaterNameId !== parentDiv.data('theater-name-id'));
            parentDiv.remove();
        });
        $('.selected-theater').append(selectedTheater);
    });
</script>