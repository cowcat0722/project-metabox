{{> layout/header}}
<script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/4.3.0/mustache.min.js"></script>
<head>
    <link rel="stylesheet" href="/css/movieSchedule.css">
</head>

<div class="mx-auto d-block" style="width: 1000px; user-select: none;">
<div class="container1" style="user-select: none; height: 383px">
    <div class="header" style="user-select: none;">자주가는 META BOX</div>
    <div class="input-group grid theater-select">
        {{#model.scrapDTOList}}
            <div style="padding:10px; width: 173px; height: 46px; background: #555555; user-select: none;"
                 data-theater-name-id="{{theaterId}}" data-theater="{{theaterName}}">{{theaterName}}</div>
        {{/model.scrapDTOList}}
        <div class="add-btn setting" style="user-select: none;" onclick="openModal()">+</div>
    </div>

    <div class="tab" style="border-bottom: 1px solid #b1b1b1; border-top: 1px solid #b1b1b1">
        {{#model.theaterAreaDTOList}}
            <div class="tablinks" onclick="openCity(event, '{{areaCode}}')">{{areaName}}</div>
        {{/model.theaterAreaDTOList}}
    </div>

    <!--         탭 콘텐츠 -->
    {{#model.theaterAreaDTOList}}
    <div style="padding: 10px;" id="{{areaCode}}" class="tabcontent">
        {{#theaterNameDTOList}}
            <div onclick="location.href='?theaterId={{theaterId}}'" style="display: inline-block;">{{theaterName}}
            <span>ㅣ</span>
        </div>
        {{/theaterNameDTOList}}
    </div>
    {{/model.theaterAreaDTOList}}



    <!-- 모달창 html 디자인 -->
    <div id="myModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <div class="tab tab-d">
                <div style="background-color: #4E0929; color: white">자주가는 META BOX</div>
            </div>
            <div class="tab-content active" id="tab1">
                <div class="theater-list theater-area-list">
                    {{#model.theaterAreaDTOList}}
                        <div class="tab-button" data-theater-id="{{areaCode}}"
                             data-area="{{areaName}}">{{areaName}}</div>
                    {{/model.theaterAreaDTOList}}
                </div>
            </div>
            {{#model.theaterAreaDTOList}}
                <div class="tab-content area-name-list" id="area-name-list-{{areaCode}}">
                    {{#theaterNameDTOList}}
                        <div class="theater-list theater-list-name">
                            <div data-theater-name-id="{{theaterId}}"
                                 data-theater="{{theaterName}}">{{theaterName}}</div>
                        </div>
                    {{/theaterNameDTOList}}
                </div>
            {{/model.theaterAreaDTOList}}

            <div class="selected-theater">
                <!-- 선택한 극장이 여기 표시됩니다 -->

            </div>

            <div class="button-container">
                <button id="checkListButton" type="button" onclick="checkList()">확인</button>
            </div>

        </div>
    </div>
    <!--    모달 디자인 끝-->


    <script>

        function openCity(evt, cityName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(cityName).style.display = "block";
            evt.currentTarget.className += " active";
        }

        document.addEventListener("DOMContentLoaded", function () {
            openCity(new Event('click'), '01');
        });
    </script>

    <style>
        /*탭 링크 스타일 */
        .tab {
            overflow: hidden;
            text-align: center;
            user-select: none;
        }

        /* 탭 링크 버튼 스타일 */
        .tab div {
            background-color: inherit;
            user-select: none;
            display: inline-block;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            font-size: 17px;
            text-align: center;
        }

        /* 탭 콘텐츠 스타일 */
        .tabcontent {
            display: inline-block;
            user-select: none;
            padding: 6px 12px;
            border-top: none;
        }
    </style>

</div>

<br>

<img src="/image/theater/theater_2.png" width="100%" alt="">
<h2>{{model.theaterName}}</h2>
<img width="100%" src="/image/theater/{{model.theaterImgFilename}}" alt="">
<div class="button-container">
    <div onClick="location.href='/theaters/movie-schedule?theaterId={{model.theaterId}}'" style="cursor:pointer"
    class="btn1 py-1 px-2">
    <i class="fas fa-calendar-alt me-2"> </i>
    상영시간표
</div>
<div style="background-color: #ff4d4d; color: #e0e0e0;" class="py-1">ㅣ</div>
<button onClick="parkingInfo('/theaters/info',1200)" style="cursor:pointer"
        class="btn1 py-1 px-2">
    위치/주차안내
</button>
</div>

<!--위치안내 페이지 자동으로 위치에 맞게 스크롤-->
<script>
    function parkingInfo(url, scrollPosition) {
        // Add the scroll position as a query parameter
        window.location.href = `${url}?scroll=${scrollPosition}`;
    }
</script>

<div class="schedule">
    <div class="date-pagination" id="datePagination">
        <div class="arrow" onclick="prevPage()">&#9664;</div>
        <div class="arrow" onclick="nextPage()">&#9654;</div>
    </div>

    <hr>
    <div id="ajax">
        {{#model.screeningInfoDTOList}}
            <div class="movie">
                <div class="d-flex mb-2">
                    <h5 style="font-weight:bold" class="me-2">{{movieTitle}}</h5>
                    <div class="text-align-center">{{movieInfo}}</div>
                </div>
                <div class="mb-3">
                    {{#screeningList}}
                        <div class="d-flex mb-1" style="font-size: 12px; font-weight: bold;">
                            <div class="me-2" style="color: #646464;">&#9654;</div>
                            <div>{{screeningRank}}</div>
                            <div style="color: #a7a5a5;">ㅣ</div>
                            <div>{{screeningName}}</div>
                            <div style="color: #a7a5a5;">ㅣ</div>
                            <div>총 {{screeningSeatCount}}석</div>
                        </div>
                        <div class="times mb-1">
                            {{#screeningTimeList}}
                                <div class="timeitems" onclick="location.href='#{{screeningInfoId}}'">
                                    <div>{{startTime}}</div>
                                    <div style="color: #2275B8">{{currentSeatCount}}석
                                    </div>
                                </div>
                            {{/screeningTimeList}}
                        </div>
                    {{/screeningList}}
                </div>
                <hr>
            </div>
        {{/model.screeningInfoDTOList}}
    </div>

</div>
</div>
<script>

    $(document).ready(function() {
        const maxSlots = 5;
        const $grid = $('.grid');
        const currentSlots = $grid.children().length - 1; // 설정 버튼 제외
        const emptySlots = maxSlots - currentSlots;

        for (let i = 0; i < emptySlots; i++) {
            $('<div></div>').css({
                padding: '10px',
                width: '173px',
                height: '46px',
                background: '#555555',
                userSelect: 'none'
            }).insertBefore('.setting');
        }
    });

    // 현재 날짜 가져오기
    let currentDate = new Date();
    let currentDay = currentDate.getDate();
    let currentMonth = currentDate.getMonth() + 1; // 월은 0부터 시작하므로 +1 해줌
    let currentYear = currentDate.getFullYear();

    // 동적으로 날짜 생성
    let datePagination = document.getElementById('datePagination');
    for (let i = 0; i < 7; i++) {
        let date = new Date(currentYear, currentMonth - 1, currentDay + i); // 새로운 날짜 객체 생성
        let month = date.getMonth() + 1; // 월은 0부터 시작하므로 +1 해줌
        let day = date.getDate();

        // 두 자리 숫자로 변환
        month = month < 10 ? '0' + month : month;
        day = day < 10 ? '0' + day : day;

        let dateElement = document.createElement('div');
        dateElement.classList.add('date');
        dateElement.textContent = `${month}월 ${day}일`;
        dateElement.onclick = function () {
            selectDate(`${currentYear}-${month}-${day}`);
        };
        datePagination.insertBefore(dateElement, datePagination.children[datePagination.children.length - 1]);
    }

    // 다음 페이지로 이동
    function nextPage() {
        // 다음 날짜로 이동하는 로직 추가
    }

    // 이전 페이지로 이동
    function prevPage() {
        // 이전 날짜로 이동하는 로직 추가
    }

    // 날짜 선택 시 처리하는 함수
    function generateMovieHtml(screeningInfoDTOList) {
        return screeningInfoDTOList.map(screeningInfo => {
            const screeningListHtml = screeningInfo.screeningList.map(screening => {
                const screeningTimeListHtml = screening.screeningTimeList.map(screeningTime => {
                    return `
                    <div class="timeitems" onclick="location.href='#${screeningTime.screeningInfoId}'">
                        <div>${screeningTime.startTime}</div>
                        <div style="color: #2275B8">${screeningTime.currentSeatCount}석</div>
                    </div>
                `;
                }).join('');

                return `
                <div class="d-flex mb-1" style="font-size: 12px; font-weight: bold;">
                    <div class="me-2" style="color: #646464;">&#9654;</div>
                    <div>${screening.screeningRank}</div>
                    <div style="color: #a7a5a5;">ㅣ</div>
                    <div>${screening.screeningName}</div>
                    <div style="color: #a7a5a5;">ㅣ</div>
                    <div>총 ${screening.screeningSeatCount}석</div>
                </div>
                <div class="times mb-1">
                    ${screeningTimeListHtml}
                </div>
            `;
            }).join('');

            return `
            <div class="movie">
                <div class="d-flex mb-2">
                    <h5 style="font-weight:bold" class="me-2">${screeningInfo.movieTitle}</h5>
                    <div class="text-align-center">${screeningInfo.movieInfo}</div>
                </div>
                <div class="mb-3">
                    ${screeningListHtml}
                </div>
                <hr>
            </div>
        `;
        }).join('');
    }

    function selectDate(date) {
        // 선택한 날짜에 대한 처리 로직 추가
        $.ajax({
            url: `/theaters/movie-schedule-ajax?date=${date}&theaterId={{model.theaterId}}`,
            type: 'GET',
            success: function (data) {
                const screeningInfoDTOList = data.body.screeningInfoDTOList;
                const newHtml = generateMovieHtml(screeningInfoDTOList);

                // 기존 콘텐츠를 새로운 HTML로 대체
                $('#ajax').empty();
                $('#ajax').append(newHtml);
            },
        });
    }



    <!-- 여기는 모달창 -->


    // 스크랩 납치
    let myTheaterScrap = [];

    function checkList() {
        // alert("작동함1");

        // theaterName 의 id, theater 값 잘 받아오는지 확인용
        $('.selected-theater div').each(function () {

            // alert("작동함3");
            // theater pk 키
            let theaterNameId = $(this).data("theater-name-id");
            console.log("극장pk " + theaterNameId);

            // 중복 확인
            if (!myTheaterScrap.some(item => item.theaterNameId === theaterNameId)) {
                let selectList = {
                    theaterNameId: theaterNameId
                };

                myTheaterScrap.push(selectList);

                // alert("작동함4");
            }

        });

        // alert("작동함5");
        console.log("이거 나오나요? " + myTheaterScrap);
        console.log("이쪽은 나오나요 ?? " + JSON.stringify(myTheaterScrap));

        // alert("작동함6");

        $.ajax({
            url: '/mypage/home/scrap',
            data: JSON.stringify(myTheaterScrap),
            contentType: 'application/json; charset=utf-8',
            type: 'POST'

        }).done((res) => {
            alert("자주가는 META BOX 설정이 완료되었습니다.");
            closeModal();
            location.reload();

        }).fail((res) => {
            alert("error!")
        });

    }


    // 모달창 script
    function openModal() {
        $("#myModal").css("display", "block");

        // 이미 선택된 극장을 모달의 selected-theater에 추가
        $(".theater-select div[data-theater-name-id]").each(function () {
            const theaterName = $(this).data("theater");
            console.log("ddd " + theaterName);
            const theaterNameId = $(this).data("theater-name-id");
            console.log("hhh " + theaterNameId);

            $(`.theater-list-name div[data-theater="${theaterName}"]`).css('background-color', '#c6c6c6');
            const selectedTheater = $(`
                <div data-theater="${theaterName}" data-theater-name-id="${theaterNameId}">
                    ${theaterName}
                    <button class="delete-button">&times;</button>
                </div>
            `);
            selectedTheater.find('.delete-button').on('click', function () {
                const parentDiv = $(this).parent();
                const theaterName = parentDiv.data('theater');
                $(`.theater-list-name div[data-theater="${theaterName}"]`).css('background-color', '');
                myTheaterScrap = myTheaterScrap.filter(item => item.theaterNameId !== parentDiv.data('theater-name-id'));
                parentDiv.remove();
            });
            $('.selected-theater').append(selectedTheater);
        });
    }

    function closeModal() {
        $("#myModal").css("display", "none");
        $('.selected-theater').empty(); // 모달 닫을 때 선택된 극장 목록 초기화
    }

    // area 거는 것
    $('.theater-area-list').on('click', '.tab-button', function () {
        // alert("찍힘 ")
        let id = $(this).data('theater-id');
        // console.log("id " + id)
        $('.area-name-list').removeClass('active');
        // 클릭한 버튼과 일치하는 영역 표시
        $('#area-name-list-' + id).addClass('active');
    });

    // 최대 5개. 중복체크도 필요함
    const maxSelectedTheaters = 5;

    // MEATABOX 강남 거는 것
    $('.theater-list-name div').on('click', function () {
        $(this).css({
            'background-color': '#c6c6c6', // 배경색도 추가
        });

        // 중복체크 용 값
        const theaterName = $(this).data('theater');
        console.log("네임 " + theaterName)

        // 중복제거
        let isSelected = false;
        $('.selected-theater div').each(function () {

            // 악 이거 지금 그냥 text만 찍으니까 &times; 이값이랑 같이 가져와서 그런다 ㅠㅠ contents~filter 같이 써야한다
            // 지금은 밑에 data 넣어놔서 data 값으로 꺼내와도 되는데 일단은 바꾸지 않겠다!!
            const textNode = $(this).contents().filter(function () {
                return this.nodeType === 3; // 텍스트 노드만 선택
            }).text().trim();

            // console.log("왜안될까요 " + $(this).text());
            if (textNode === theaterName) {
                isSelected = true;
                return false;
            }
        });

        // 이 코드도 있어야지 중복 해결 됨!!
        if (isSelected) {
            // alert("중복");
            return;
        }


        if ($('.selected-theater div').length >= maxSelectedTheaters) {
            alert('최대 5개의 극장만 선택할 수 있습니다.');
            return;
        }

        // 스크랩용
        let theaterNameIds = $(this).data("theater-name-id");
        console.log("아이디아이디 = " + theaterNameIds);

        // 극장 추가
        // console.log("네임아 " + theaterName);
        const selectedTheater = $(`
            <div data-theater="${theaterName}" data-theater-name-id="${theaterNameIds}">
                ${theaterName}
                <button class="delete-button">&times;</button>
            </div>
        `);

        selectedTheater.find('.delete-button').on('click', function () {
            // delete-button 의 parent인 div data-theater에서 theaterName 을 찾음
            const parentDiv = $(this).parent();
            // console.log("이거 뭘까 = " + parentDiv);
            // 그 theaterName에서 date 값을 가져옴
            const theaterName = parentDiv.data('theater');
            // console.log("이건? = " + theaterName);

            // 해당 극장의 배경색 초기화
            // 그럼 data-theater에서 theaterName 인 div 를 찾아 css 를 빼주면 됨!
            $(`.theater-list-name div[data-theater="${theaterName}"]`).css({
                'background-color': '', // 배경색 초기화
            });

            // myTheaterScrap에서 해당 극장 제거
            myTheaterScrap = myTheaterScrap.filter(item => item.theaterNameId !== parentDiv.data('theater-name-id'));

            $(this).parent().remove();
        });

        $('.selected-theater').append(selectedTheater);

    });

    // 여기는 모달창 //


</script>

{{> layout/footer}}